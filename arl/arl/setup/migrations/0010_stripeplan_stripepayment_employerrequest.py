# Generated by Django 4.2.10 on 2025-04-02 23:20

from decimal import Decimal
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):
    dependencies = [
        ("user", "0054_remove_stripepayment_employer_delete_employerrequest_and_more"),
        ("setup", "0009_remove_tenantapikeys_service_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="StripePlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("stripe_price_id", models.CharField(max_length=100)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                "db_table": "user_stripeplan",
            },
        ),
        migrations.CreateModel(
            name="StripePayment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("300.00"), max_digits=10
                    ),
                ),
                ("is_paid", models.BooleanField(default=False)),
                ("payment_date", models.DateTimeField(blank=True, null=True)),
                (
                    "stripe_session_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "stripe_subscription_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "stripe_customer_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "employer",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="user.employer"
                    ),
                ),
            ],
            options={
                "db_table": "user_stripepayment",
            },
        ),
        migrations.CreateModel(
            name="EmployerRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "email",
                    models.EmailField(
                        help_text="Contact email for the employer",
                        max_length=254,
                        unique=True,
                    ),
                ),
                ("address", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "address_two",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "state_province",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "country",
                    django_countries.fields.CountryField(
                        blank=True, max_length=2, null=True
                    ),
                ),
                (
                    "phone_number",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True, max_length=128, null=True, region=None
                    ),
                ),
                (
                    "senior_contact_name",
                    models.CharField(
                        blank=True,
                        help_text="The senior contact person for this employer (e.g., HR Manager, Director).",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated", models.DateTimeField(auto_now=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="pending",
                        max_length=10,
                    ),
                ),
                (
                    "verified_sender_local",
                    models.CharField(
                        blank=True,
                        help_text="Enter only the part before '@yourdomain.com'",
                        max_length=50,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "verified_sender_email",
                    models.EmailField(
                        blank=True,
                        help_text="This is the full email generated based on your input.",
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "stripe_plan",
                    models.ForeignKey(
                        blank=True,
                        help_text="Select the Stripe plan for this employer (defaults to Free Plan)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="setup.stripeplan",
                    ),
                ),
            ],
            options={
                "db_table": "user_employerrequest",
            },
        ),
    ]
